<?xml version='1.0'?>
<%-
# This is the master rover model template. Any updates to the rover model should
# be made to this file before regenerating the SDF file for each rover.

if !defined?(rovername) || !defined?(rovercolor)
  STDERR.puts "Usage: erb -T - rovername=name rovercolor=color -- " + __FILE__
  exit(false)
end

# This message will be embedded into the SDF file when it's generated to
# discourage editing anything but this master template.
warning_msg = "
!!! This SDF file was generated from the master template. !!!
!!! Do NOT edit this file by hand. !!!
!!! Instead, edit the template and re-generate the model files. !!!
"

base_link_frame = rovername + "/base_link"
odom_frame = rovername + "/odom"


# sonar configuration
sonar_frames = {
  "left" => rovername + "/us_left_link",
  "right" => rovername + "/us_right_link",
  "center" => rovername + "/us_center_link"
}

us_x = 0.15
us_y = 0.07
us_z = 0.053
us_yaw = 0.43633

sonar_config = {
  "left" => {
    :x0 => us_x, :y0 => us_y, :z0 => us_z, :yaw => us_yaw,
    :topic => "/" + rovername + "/sonarLeft", :frame => sonar_frames["left"]
  },
  "right" => {
    :x0 => us_x, :y0 => -us_y, :z0 => us_z, :yaw => -us_yaw,
    :topic => "/" + rovername + "/sonarRight", :frame => sonar_frames["right"]
  },
  "center" => {
    :x0 => us_x, :y0 => 0, :z0 => us_z, :yaw => 0,
    :topic => "/" + rovername + "/sonarCenter", :frame => sonar_frames["center"]
  }
}


# camera configuration
camera_frame = "camera_link"


# gripper fingers configuration
finger_pose_x = 0.214
finger_pose_y = 0.016
finger_pose_z = 0.0095
finger_coll_x = 0.033
finger_coll_y = 0.014
finger_coll_yaw = 0.38
finger_joint_x = 0.0324
finger_joint_y = 0.0052
finger_limit = 0.7854

grip_finger_config = {
  "left" => {
    :x0 => finger_pose_x, :y0 => finger_pose_y, :z0 => finger_pose_z,
    :coll_x => finger_coll_x, :coll_y => -finger_coll_y, :coll_yaw => -finger_coll_yaw,
    :joint_x => -finger_joint_x, :joint_y => finger_joint_y,
    :up_limit => finger_limit, :low_limit => 0.0
  },
  "right" => {
    :x0 => finger_pose_x, :y0 => -finger_pose_y, :z0 => finger_pose_z,
    :coll_x => finger_coll_x, :coll_y => finger_coll_y, :coll_yaw => finger_coll_yaw,
    :joint_x => -finger_joint_x, :joint_y => -finger_joint_y,
    :up_limit => 0.0, :low_limit => -finger_limit
  }
}


# wheel configurations
wheel_x = 0.095
wheel_y = 0.135
wheel_z = 0.03
coll_roll = 1.5708
left_stl = "TireWheelLeft.stl"
right_stl = "TireWheelRight.stl"

wheel_config = {
  "left_front" => {
    :x0 => wheel_x, :y0 => wheel_y, :z0 => -wheel_z, :coll_roll => coll_roll,
    :stl => left_stl
  },
  "right_front" => {
    :x0 => wheel_x, :y0 => -wheel_y, :z0 => -wheel_z, :coll_roll => -coll_roll,
    :stl => right_stl
  },
  "left_rear" => {
    :x0 => -wheel_x, :y0 => wheel_y, :z0 => -wheel_z, :coll_roll => coll_roll,
    :stl => left_stl
  },
  "right_rear" => {
    :x0 => -wheel_x, :y0 => -wheel_y, :z0 => -wheel_z, :coll_roll => -coll_roll,
    :stl => right_stl
  }
}
-%>
<%= "<!--" %>
<%= warning_msg %>
<%= "-->" %>
<sdf version='1.4'>
	<model name="<%= rovername %>">

		<static>false</static>

		<link name='base_link'>
			<inertial>
				<mass>3</mass>
				<inertia>
					<ixx>0.006</ixx>
					<ixy>0.0</ixy>
					<ixz>0.0</ixz>
					<iyy>0.006</iyy>
					<iyz>0.0</iyz>
					<izz>0.006</izz>
				</inertia>
			</inertial>
			<collision name='base_link_collision'>
				<pose>0 0 0.03 0 0 0</pose>
				<geometry>
					<box>
						<size>0.26 0.205 0.18</size>
					</box>
				</geometry>
			</collision>

			<visual name='base_link_visual'>
				<pose>0 0 -0.06 0 0 0</pose>
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/Body.stl</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/Grey</name>
					</script>
				</material>
			</visual>

			<%-
				sonar_config.keys.each do |key|
					x0 = sonar_config[key][:x0]
					y0 = sonar_config[key][:y0]
					z0 = sonar_config[key][:z0]
					yaw = sonar_config[key][:yaw]
					topic = sonar_config[key][:topic]
					frame = sonar_config[key][:frame]
			-%>
			<sensor type="ray" name="<%= 'us_' + key + '_sensor' %>">
				<pose><%= x0 %> <%= y0 %> <%= z0 %> 0 0 <%= yaw %></pose>
				<visualize>false</visualize>
				<update_rate>5</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>3</samples>
							<resolution>1.0</resolution>
							<min_angle>-.478</min_angle>
							<max_angle>0.478</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.010</min>
						<max>3</max>
						<resolution>0.01</resolution>
					</range>
				</ray>
				<plugin name="us" filename="libhector_gazebo_ros_sonar.so">
					<gaussianNoise>0.005</gaussianNoise>
					<topicName><%= topic %></topicName>
					<frameId><%= frame %></frameId>
				</plugin>
			</sensor>
			<%- end -%>

			<sensor type="camera" name="camera">
				<pose>0.145 -0.0162 0.088 0.0 0.628 0.0</pose>
				<visualize>false</visualize>
				<update_rate>6.0</update_rate>
				<camera name="head">
					<horizontal_fov>1.0123</horizontal_fov>
					<image>
						<width>320</width>
						<height>240</height>
						<format>B8G8R8</format>
					</image>
					<clip>
						<near>0.02</near>
						<far>300</far>
					</clip>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.007</stddev>
					</noise>
				</camera>
				<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
					<alwaysOn>true</alwaysOn>
					<updateRate>0.0</updateRate>
					<cameraName>/<%= rovername %>/camera</cameraName>
					<imageTopicName>/<%= rovername %>/camera/image</imageTopicName>
					<cameraInfoTopicName>/<%= rovername %>/camera/info</cameraInfoTopicName>
					<frameName><%= camera_frame %></frameName>
					<hackBaseline>0.1</hackBaseline>
					<distortionK1>0.0</distortionK1>
					<distortionK2>0.0</distortionK2>
					<distortionK3>0.0</distortionK3>
					<distortionT1>0.0</distortionT1>
					<distortionT2>0.0</distortionT2>
					<CxPrime>0.0</CxPrime>
					<Cx>0.0</Cx>
					<Cy>0.0</Cy>
					<focalLength>0.0</focalLength>
				</plugin>
			</sensor>

			<collision name='top_plate_collision'>
				<pose>0 0 0.12 0 0 0</pose>
				<geometry>
					<box>
						<size>0.25 0.30 0.005</size>
					</box>
				</geometry>
			</collision>
			<visual name='top_plate_visual'>
				<pose>0.0006 0 0.12 0 0 0</pose>
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/CoverPlate.stl</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/<%= rovercolor %></name>
					</script>
				</material>
			</visual>

			<collision name='cow_catcher_front_left_collision'>
				<pose>0.1675 0.06 -0.05 0 -0.4 0.3</pose>
				<geometry>
					<box>
					  <size>0.01 0.08 0.06</size>
					</box>
				</geometry>
			</collision>

			<collision name='wheel_guard_front_left_collision'>
				<pose>0.148 0.13 -0.05 0 0 0</pose>
				<geometry>
					<box>
					  <size>0.01 0.08 0.06</size>
					</box>
				</geometry>
			</collision>

			<collision name='cow_catcher_front_right_collision'>
				<pose>0.1675 -0.06 -0.05 0 -0.4 -0.3</pose>
				<geometry>
					<box>
					  <size>0.01 0.08 0.06</size>
					</box>
				</geometry>
			</collision>

			<collision name='wheel_guard_front_right_collision'>
				<pose>0.148 -0.13 -0.05 0 0 0</pose>
				<geometry>
					<box>
					  <size>0.01 0.08 0.06</size>
					</box>
				</geometry>
			</collision>

			<visual name='cow_catcher_front_visual'>
				<pose>0.1675 0 -0.08 1.57079 0 0</pose>
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/CowCatcherFront.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/FlatBlack</name>
					</script>
				</material>
			</visual>

			<collision name='cow_catcher_back_lower_collision'>
				<pose>-0.1305 0.0 -0.0665 1.57079 1.05 0.0</pose>
				<geometry>
					<box>
					  <size>0.01 0.03 0.18</size>
					</box>
				</geometry>
			</collision>
			<visual name='cow_catcher_back_visual'>
				<pose>-0.1275 -0.1 -0.04 1.57079 0 3.1415</pose>
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/CowCatcherRear.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/FlatBlack</name>
					</script>
				</material>
			</visual>

		</link>

		<link name="gripper_wrist">
			<pose>0.155 0 -0.013 0 0 0</pose>
			<inertial>
				<mass>0.03</mass>
				<inertia>
					<ixx>0.00245</ixx> <!--> 1/12*(mass)(h^2 + d^2) where h,d,w are in meters and mass is in kilograms <-->
					<ixy>0.0</ixy>
					<ixz>0.0</ixz>
					<iyy>0.00185</iyy> <!--> 1/12*(mass)(w^2 + d^2) <-->
					<iyz>0.0</iyz>
					<izz>0.00185</izz> <!--> 1/12*(mass)(w^2 + h^2) <-->
				</inertia>
			</inertial>

			<visual name="visual">
				<pose>0 0 0 0 0 0</pose>
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/GripperWrist.stl</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/Grey</name>
					</script>
				</material>
			</visual>
			<collision name="collision">
			  <pose>0.0 0 -0.0055 0 0 0</pose>
				<geometry>
					<box>
					  <size>0.07 0.05 0.07</size>
					</box>
				</geometry>
			</collision>
		</link>

		<joint name="gripper_wrist_joint" type="revolute">
			<parent>base_link</parent>
			<child>gripper_wrist</child>
			<pose>-0.0227 0 -0.0105 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
				<limit>
					<upper>0.7</upper>
					<lower>0.0</lower>
				</limit>
				<dynamics>
				  <damping>0.07</damping>
				</dynamics>
			</axis>
		</joint>

		<%-
			grip_finger_config.keys.each do |key|
				x0 = grip_finger_config[key][:x0]
				y0 = grip_finger_config[key][:y0]
				z0 = grip_finger_config[key][:z0]
				coll_x = grip_finger_config[key][:coll_x]
				coll_y = grip_finger_config[key][:coll_y]
				coll_yaw = grip_finger_config[key][:coll_yaw]
				joint_x = grip_finger_config[key][:joint_x]
				joint_y = grip_finger_config[key][:joint_y]
				up_limit = grip_finger_config[key][:up_limit]
				low_limit = grip_finger_config[key][:low_limit]
		-%>
		<link name="gripper_<%= key %>_finger">
			<pose><%= x0 %> <%= y0 %> <%= z0 %> 0 0 0</pose>
			<inertial>
				<mass>0.005</mass>
				<inertia>
					<ixx>0.0000833</ixx>
					<ixy>0.0</ixy>
					<ixz>0.0</ixz>
					<iyy>0.0005417</iyy>
					<iyz>0.0</iyz>
					<izz>0.0006083</izz>
				</inertia>
			</inertial>
			<collision name="collision">
				<pose>0 0 0 0 0 <%= coll_yaw %></pose>
				<geometry>
					<box>
						<size>0.06 0.01 0.007</size>
					</box>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.8</mu>
							<mu2>0.7</mu2>
						</ode>
					</friction>
				</surface>
			</collision>
			<collision name="collision2">
				<pose><%= coll_x %> <%= coll_y %> 0 0 0 <%= coll_yaw %></pose>
				<geometry>
					<box>
						<size>0.01 0.01 0.007</size>
					</box>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.8</mu>
							<mu2>0.7</mu2>
						</ode>
					</friction>
				</surface>
			</collision>
			<visual name="visual">
				<pose>0 0 0 0 0 0</pose>
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/GripperFinger<%= key.capitalize %>.stl</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/Grey</name>
					</script>
				</material>
			</visual>
			<sensor name='finger' type='contact'>
			  <contact>
			    <collision>collision</collision>
			  </contact>
			</sensor>
		</link>

		<joint name ="gripper_<%= key %>_finger_joint" type="revolute">
			<parent>gripper_wrist</parent>
			<child>gripper_<%= key %>_finger</child>
			<pose><%= joint_x %> <%= joint_y %> 0 0 0 0</pose>
			<axis>
				<xyz>0 0 1</xyz>
				<limit>
					<upper><%= up_limit %></upper>
					<lower><%= low_limit %></lower>
				</limit>
				<dynamics>
				  <damping>0.07</damping>
				</dynamics>
			</axis>
		</joint>

		<%- end -%>

		<%-
			wheel_config.keys.each do |key|
				x0 = wheel_config[key][:x0]
				y0 = wheel_config[key][:y0]
				z0 = wheel_config[key][:z0]
				coll_roll = wheel_config[key][:coll_roll]
				stl = wheel_config[key][:stl]
		-%>
		<link name="<%= key %>_wheel">
			<pose><%= x0 %> <%= y0 %> <%= z0 %> 0 0 0</pose>
			<inertial>
				<mass>1.0</mass>
				<inertia>
					<ixx>0.000776</ixx>
					<ixy>0.0</ixy>
					<ixz>0.0</ixz>
					<iyy>0.0012</iyy>
					<iyz>0.0</iyz>
					<izz>0.000776</izz>
				</inertia>
			</inertial>
			<collision name="collision">
				<pose>0 0 0 <%= coll_roll %> 0 0</pose>
				<geometry>
					<cylinder>
						<radius>.0575</radius>
						<length>.07</length>
 					</cylinder>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>0.8</mu>
							<mu2>0.7</mu2>
						</ode>
					</friction>
				</surface>
			</collision>
			<visual name="visual">
				<geometry>
					<mesh>
						<uri>model://swarmie/meshes/<%= stl %></uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<name>Gazebo/Grey</name>
					</script>
				</material>
			</visual>
		</link>

		<joint name="<%= key %>" type="revolute">
			<parent>base_link</parent>
			<child><%= key %>_wheel</child>
			<axis>
				<xyz>0 1 0</xyz>
			</axis>
			<physics>
				<ode>
					<cfm>0.01</cfm>
					<erp>0.8</erp>
				</ode>
			</physics>
		</joint>

		<%- end -%>

		<!-- Gripper plugin-->
		<plugin name="gripper_sim" filename="libgazebo_plugins_gripper.so">
			<!-- required: joint definitions -->
			<wristJoint>gripper_wrist_joint</wristJoint>
			<leftFingerJoint>gripper_left_finger_joint</leftFingerJoint>
			<rightFingerJoint>gripper_right_finger_joint</rightFingerJoint>

			<!-- required: data input topics for this plugin -->
			<wristTopic>/<%= rovername %>/wristAngle/cmd</wristTopic>
			<fingerTopic>/<%= rovername %>/fingerAngle/cmd</fingerTopic>

			<!-- optional: print debug info to the console -->
			<debug>
				<!-- true (debug mode is on) or false (debug mode is off) -->
				<printToConsole>false</printToConsole>
				<!-- time (in simulated seconds) between debug print statements -->
				<printDelayInSeconds>5.0</printDelayInSeconds>
			</debug>

			<!-- optional: the refresh rate of the gripper and all debugging output -->
			<!-- this value is the number of updates performed per second -->
			<!-- warning: low values (i.e. < 100) can cause the gripper to have poor performance -->
			<updateRate>1000.0</updateRate>

			<!-- optional: set the default PID values for the wrist joint -->
			<!-- values in order: Proportional gain, Integral gain, Derivative gain -->
			<wristPID>1.0 0.0 0.0</wristPID>

			<!-- optional: set the default PID values for the finger joints -->
			<!-- values in order: Proportional gain, Integral gain, Derivative gain -->
			<!-- it is always assumed that both fingers use the same PID values -->
			<fingerPID>1.0 0.0 0.0</fingerPID>

			<!-- optional: set the min/max force applicable to the wrist joint in Newtons -->
			<!-- values in order: minimum force, maximum force -->
			<wristForceLimits>-0.5 0.5</wristForceLimits>

			<!-- optional: set the min/max force applicable to the finger joints in Newtons -->
			<!-- values in order: minimum force, maximum force -->
			<!-- it is always assumed that both fingers use the same min/max force values -->
			<fingerForceLimits>-0.5 0.5</fingerForceLimits>
		</plugin>

		<!-- Skid Steer Drive plugin -->
		<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
			<updateRate>10</updateRate>
			<robotNamespace>/</robotNamespace>
			<leftFrontJoint>left_front</leftFrontJoint>
			<rightFrontJoint>right_front</rightFrontJoint>
			<leftRearJoint>left_rear</leftRearJoint>
			<rightRearJoint>right_rear</rightRearJoint>
			<wheelSeparation>0.27</wheelSeparation>
			<wheelDiameter>0.12</wheelDiameter>
			<robotBaseFrame><%= base_link_frame %></robotBaseFrame>
			<torque>2.8</torque>
			<commandTopic>/<%= rovername %>/skidsteer</commandTopic>
			<odometryTopic>/<%= rovername %>/odom</odometryTopic>
			<odometryFrame><%= odom_frame %></odometryFrame>
			<broadcastTF>0</broadcastTF>base_link
		</plugin>

		<!-- GPS plugin -->
		<plugin name="gps_sim" filename="libhector_gazebo_ros_gps.so">
			<alwaysOn>1</alwaysOn>
			<updateRate>5</updateRate>
			<bodyName>base_link</bodyName>
			<frameId><%= base_link_frame %></frameId>
			<topicName>/<%= rovername %>/fix</topicName>
			<referenceLatitude>28.584810</referenceLatitude>
			<referenceLongitude>-80.649650</referenceLongitude>
			<referenceHeading>0.0</referenceHeading>
			<referenceAltitude>10.0</referenceAltitude>
			<offset>0.0 0.0 0.0</offset>
			<drift>0.1 0.1 0</drift>
			<driftFrequency>0.0 0.0 0.0</driftFrequency>
			<gaussianNoise>0.4 0.5 0.0</gaussianNoise>
		</plugin>

		<!-- IMU plugin -->
		<plugin name="imu_sim" filename="libhector_gazebo_ros_imu.so">
			<updateRate>10</updateRate>
			<bodyName>base_link</bodyName>
			<frameId><%= base_link_frame %></frameId>
			<topicName>/<%= rovername %>/imu</topicName>
			<xyzOffset>0 0 0</xyzOffset>
			<rpyOffset>0 0 0</rpyOffset>
			<gaussianNoise>0</gaussianNoise>
			<accelDrift>0.5 0.5 0.5</accelDrift>
			<accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
			<rateDrift>0.1 0.1 0.1</rateDrift>
			<rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
			<headingDrift>0.01</headingDrift>
			<headingGaussianNoise>0.01</headingGaussianNoise>
		</plugin>

	</model>
</sdf>
